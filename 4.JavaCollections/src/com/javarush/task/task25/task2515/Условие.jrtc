taskKey="com.javarush.task.task25.task2515.big05"\n\nSpace (5)

Теперь перейдем к классу BaseObject.
Я хочу сделать несколько предложений.

Во-первых. Для простоты, считать все объекты у нас в космосе круглыми.
Нет, отрисовывать их мы будем фигурными, как и раньше.
А вот при расчетах их взаимодействия исходить из того, что они круглые.
Так - гораздо проще.

Во-вторых. Пусть координаты объектов и радиус будут вещественными числами.
Это придаст плавность движениям и точность всем вычислениям.
А при отрисовке мы будем их округлять.

В классе BaseObject необходимо:
а) Добавить переменные x (double), y (double), radius (double), геттеры и сеттеры для них.
б) Добавить логическую переменную isAlive (жив объект или уже нет).
в) Добавить геттер (isAlive()-метод для isAlive-переменной).
г) Добавить конструктор BaseObject(double x, double y, double radius).
д) Проследить, чтобы в конструкторе isAlive устанавливался в true (мертворожденные нам ни к чему).
Также надо пройтись по всем классам-наследникам и поправить у них конструкторы.
Если ты используешь Intellij IDEA - Alt+Insert тебе в помощь.


Требования:
1.	В классе BaseObject создай поле x (double). Добавь для него getter и setter.
2.	В классе BaseObject создай поле y (double). Добавь для него getter и setter.
3.	В классе BaseObject создай поле radius (double). Добавь для него getter и setter.
4.	В классе BaseObject создай поле isAlive (boolean). Добавь для него getter.
5.	В классе BaseObject создай конструктор BaseObject(double x, double y, double radius). Поле isAlive должно устанавливаться в true.
6.	Создай аналогичные конструкторы во всех классах, которые наследуются от BaseObject.


Space (5)

Чего не хватает классу Space?
Правильно - методов run() и draw().
run управляет всей логикой игры, если ты помнишь.
А draw отвечает за отрисовку очередного &quot;кадра&quot;.

А еще нам пригодится метод sleep(int ms).
Создай их.



Space (5)

Для чего нам нужен класс Space?
Чтобы хранить в себе все объекты и управлять их взаимодействием.
А какие параметры должны у него быть?
width (ширина), height (высота). Тип int.
А еще?
а) SpaceShip ship (космический корабль),
б) список для хранения всех НЛО - ufos (List&lt;Ufo&gt;),
в) список для хранения всех ракет - rockets (List&lt;Rocket&gt;),
г) список для хранения всех бомб - bombs (List&lt;Bomb&gt;).

Задание:
Добавь все эти поля в класс Space. Поля должны быть приватными.
Инициализируй коллекции.
И не забудь добавить полям getter&#39;ы, а для ship еще и setter!

Ну и конструктор. А что должен содержать конструктор?
Достаточно будет width и height.



Space (5)

У нас будут бомбы и ракеты.
Значит нам нужны классы Bomb(бомба) и Rocket(ракета).
Создай их.

У наших объектов будет много общего.
Они будут перемещаться по космосу и отрисовываться.
Значит у них у всех будут координаты и размер.
А еще методы move() - для перемещения и draw() для отрисовки.

Есть интересное предложение: давай введем один базовый класс для всех объектов.
Пусть это будет класс BaseObject.
А классы Ufo, SpaceShip, Rocket, Bomb от него наследуются.
Создай абстрактный класс BaseObject и добавь его родителем к классам Ufo, SpaceShip, Rocket, Bomb.

Еще нам понадобится класс Canvas.
Он будет ответственным за &quot;отрисовку&quot; объектов.
С его помощью они будут отрисовывать себя.
Вернее даже на нем.
Создай и этот класс.



Space (5)

Давай напишем новую компьютерную игрушку.
У нас будет космический корабль, который стреляет ракетами в НЛО.
А НЛО в свою очередь сбрасывает на корабль бомбы.
Ну и, конечно, всё дело происходит в космосе.

Нам понадобятся классы: Space(космос), SpaceShip(космический корабль) и Ufo(НЛО).
Создай классы: Space, SpaceShip, Ufo.
Добавь метод main в класс Space.



