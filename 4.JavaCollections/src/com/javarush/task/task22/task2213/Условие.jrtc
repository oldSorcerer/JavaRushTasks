taskKey="com.javarush.task.task22.task2213.big16"\n\nТетрис(16)

Напиши свою реализацию методов left(), right(), up(), down() в классе Figure.
Подумай, что должны делать эти методы?
Обрати внимание: в процессе реализации некоторых методов тебе надо будет проверять нарушение границ игрового поля,
делать это нужно с помощью существующего метода isCurrentPositionAvailable().


Требования:
1.	Метод left() должен уменьшать значение поля x на единицу, если это возможно(не нарушены границы игрового поля).
2.	Метод right() должен увеличивать значение поля x на единицу, если это возможно(не нарушены границы игрового поля).
3.	Метод up() должен уменьшать значение поля y на единицу.
4.	Метод down() должен увеличивать значение поля y на единицу.


Тетрис(16)

Напиши реализацию метода step в классе Tetris.
В методе надо переместить фигурку вниз на один шаг.

Если после перемещения положить фигурку на текущее место невозможно, то:
а) поднять ее обратно (up)
б) &quot;приземлить&quot; ее (landed)
в) удалить все &quot;полные линии&quot; в объекте field
г) создать новую фигурку взамен старой.



Тетрис(16)

Напиши реализацию метода removeFullLines в классе Field.
Надо:
а) удалить все строки из матрицы, которые полностью заполнены (состоят из одних единиц);
б) сместить оставшиеся строки вниз;
в) создать новые строки взамен отсутствующих.

ВАЖНО!
matrix[y][x] содержит элемент с координатами (x,y).
matrix[i] содержит i-ю строку.
Мы можем:
а) удалить строку:
matrix[i] = null;

б) скопировать [ссылку на] строку:
matrix[i+1] = matrix[i];

в) создать новую строку:
matrix[i] = new int[width];



Тетрис(16)

Теперь приступим к реализации созданных методов.
Напиши реализацию метода print в классе Field
а) Метод должен выводить на экран прямоугольник состоящий из символов &#39;.&#39; и &#39;X&#39;.
б) Высота прямоугольника равна height, ширина - width
в) Если данная клетка пустая - вывести точку, если не пустая - английский X

Подсказка:
if (matrix[y][x]==0) ...



Тетрис(16)

В тетрисе мы управляем движением фигурки с помощью клавиатуры.

Тут есть 4 действия:
движение влево (кнопка влево)
движение вправо (кнопка вправо)
поворот фигурки (цифра 5 на доп.клавиатуре справа)
падение вниз (пробел)

Мы будем обрабатывать ввод с клавиатуры в методе run() класса Tetris.

И тут у меня для тебя две новости: хорошая и плохая
Плохая новость состоит в том, что java не позволяет считать нажатые символы с клавиатуры,
пока пользователь не нажмет enter.
Не очень удобно, правда?

Хорошая новость состоит в том, что я написал специальный класс (KeyboardObserver), который позволяет обойти это ограничение.
Так что ты можешь воспользоваться им.

Есть еще и отличная новость.
Ты до сих пор отлично справлялся, поэтому я помогу тебе немного.
Я написал за тебя методы:
а) createRandomFigure в FigureFactory
б) run в Tetris

Изучи их внимательно и переходи дальше.



Тетрис(16)

Теперь создай класс FigureFactory.
С его помощью мы будем создавать фигуры различных форм.
Пока он будет содержать только один статический метод createRandomFigure:
static Figure createRandomFigure(int x,int y)
Реализацию метода мы напишем позже, а сейчас для того, чтобы программа скомпилировалась, верни в методе какое-нибудь значение, например, null.



