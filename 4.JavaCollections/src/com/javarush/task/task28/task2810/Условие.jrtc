taskKey="com.javarush.task.task28.task2810.big03"\n\nAggregator (3)

Начиная с этого задания ты начнешь писать логику получения данных с сайта.
Эта логика будет полностью сосредоточена в классах, реализующих интерфейс Strategy.

Провайдер в данном случае выступает в качестве контекста, если мы говорим о паттерне Стратегия.
В провайдере должен быть метод, который будет вызывать метод стратегии для выполнения главной операции.
Этот метод будет возвращать все java вакансии с выбранного сайта (ресурса).

1. В корне задачи создай пакет vo (value object), в котором создай класс Vacancy.
Этот класс будет хранить данные о вакансии.

2. В Provider создай публичный метод List&lt;Vacancy&gt; getJavaVacancies(String searchString). Оставь пока метод пустым.

3. Что есть у вакансии?
Название, зарплата, город, название компании, название сайта, на котором вакансия найдена, ссылка на вакансию.
В классе Vacancy создай соответствующие приватные строковые поля: title, salary, city, companyName, siteName, url.

4. Создай геттеры и сеттеры для всех полей класса Vacancy.

5. В пакете model создай класс HHStrategy, реализующий интерфейс Strategy.
Этот класс будет реализовывать конкретную стратегию работы с сайтом поиска работы (https://grc.ua/ и https://hh.ru/).


Требования:
1.	В корне задачи создай пакет vo, в нем создай класс Vacancy.
2.	В классе Provider создай пустой публичный метод getJavaVacancies(String searchString), который будет возвращать список вакансий.
3.	В классе Vacancy создай приватные строковые поля: title, salary, city, companyName, siteName, url.
4.	К полям в классе Vacancy создай геттеры и сеттеры.
5.	В пакете model создай класс HHStrategy, который реализует интерфейс Strategy.


Aggregator (3)

1. В корне задачи создай класс Controller, в нем будет содержаться логика работы программы.

2. В Controller добавь публичный конструктор, который будет принимать столько провайдеров, сколько в него передадут для обработки
(аргументы переменной длины - varargs). Сохрани их в приватное поле providers.
Помнишь, как это делать? Нужно нажать на аргументе конструктора Alt+Enter, выбрать Create Field for Parameter &#39;providers&#39;.

3. Если провайдеры не переданы в конструктор контроллера, то брось IllegalArgumentException.

4. Создай метод toString() в классе Controller (Alt+Insert -&gt; toString()) со стандартной реализацией (должен выводить поле providers).

5. В методе main() класса Aggregator:
5.1. Создай провайдер. Поскольку реализации стратегии (Strategy) пока нет, то в конструктор провайдера передай null.

5.2. Создай контроллер с этим провайдером.

5.3. В методе main() выведи в консоль созданный экземпляр Controller-а.



Aggregator (3)

Пришло время немного поработать с информацией в инете. В этом задании ты будешь писать агрегатор java вакансий.
Что у нас должно быть?
Должен быть список сайтов, на которых мы ищем вакансии.
Для начала возьмем https://grc.ua/ и https://hh.ru/, потом уже добавим другие сайты поиска работы.
Это один и тот же сайт, только в разных доменах.

С чего же нужно начать реализацию? Конечно же с метода main :)
1. Создай класс Aggregator с методом main.

2. Создай пакет model, в нем создай класс Provider.
Этот класс будет обобщать способ получения данных о вакансиях.

3. Т.к. для каждого сайта будет выполняться одинаковый сценарий, то будет паттерн Стратегия. Почитай про него в инете на вики.
В пакете model создай интерфейс Strategy.
Он будет отвечать за получение данных с сайта.

4. В класс Provider добавь приватное поле Strategy strategy. Добавь конструктор с этим полем и сеттер.



