taskKey="com.javarush.task.task28.task2810.big02"\n\nAggregator (2)

1. В корне задачи создай класс Controller, в нем будет содержаться логика работы программы.

2. В Controller добавь публичный конструктор, который будет принимать столько провайдеров, сколько в него передадут для обработки
(аргументы переменной длины - varargs). Сохрани их в приватное поле providers.
Помнишь, как это делать? Нужно нажать на аргументе конструктора Alt+Enter, выбрать Create Field for Parameter &#39;providers&#39;.

3. Если провайдеры не переданы в конструктор контроллера, то брось IllegalArgumentException.

4. Создай метод toString() в классе Controller (Alt+Insert -&gt; toString()) со стандартной реализацией (должен выводить поле providers).

5. В методе main() класса Aggregator:
5.1. Создай провайдер. Поскольку реализации стратегии (Strategy) пока нет, то в конструктор провайдера передай null.

5.2. Создай контроллер с этим провайдером.

5.3. В методе main() выведи в консоль созданный экземпляр Controller-а.


Требования:
1.	Создай класс Controller.
2.	К классу Controller добавь конструктор, который принимает столько провайдеров, сколько в него передадут для обработки.
3.	В конструкторе сохрани все провайдеры в поле providers. Если ни одного провайдера передано не было - брось IllegalArgumentException
4.	В классе Controller создай метод toString со стандартной реализацией.
5.	В методе main создай провайдер и контроллер с этим провайдером.
6.	В методе main выведи в консоль созданный экземпляр контроллера.


Aggregator (2)

Пришло время немного поработать с информацией в инете. В этом задании ты будешь писать агрегатор java вакансий.
Что у нас должно быть?
Должен быть список сайтов, на которых мы ищем вакансии.
Для начала возьмем https://grc.ua/ и https://hh.ru/, потом уже добавим другие сайты поиска работы.
Это один и тот же сайт, только в разных доменах.

С чего же нужно начать реализацию? Конечно же с метода main :)
1. Создай класс Aggregator с методом main.

2. Создай пакет model, в нем создай класс Provider.
Этот класс будет обобщать способ получения данных о вакансиях.

3. Т.к. для каждого сайта будет выполняться одинаковый сценарий, то будет паттерн Стратегия. Почитай про него в инете на вики.
В пакете model создай интерфейс Strategy.
Он будет отвечать за получение данных с сайта.

4. В класс Provider добавь приватное поле Strategy strategy. Добавь конструктор с этим полем и сеттер.



