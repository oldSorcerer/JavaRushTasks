taskKey="com.javarush.task.task34.task3410.big01"\n\nSokoban (1)

Сегодня мы напишем свою реализацию игры Сокобан. Это логическая игра-головоломка,
более подробно про нее можешь прочитать в Википедии. Игра будет состоять из 3х
основных компонентов (как ты догадался, тут не обошлось без паттерна MVC).
Графический интерфейс будет реализован с использованием Swing.
1.1. Создай пакет view и добавь в него класс View, унаследованный от JFrame. Этот класс
будет отвечать за графическое представление нашей игры.
1.2. Создай пакет model и добавь в него класс Model. Этот класс будет отвечать за модель
нашей игры. Как тебе названия классов? Правда они непредсказуемые? :) На самом
деле, очень важно назвать классы так, чтобы человек, который впервые видит твой
проект, сразу понял за что они отвечают.
1.3. Создай пакет controller и добавь в него класс Controller с конструктором по умолчанию.
1.4. Добавь в класс View конструктор, который будет принимать Controller и сохранять его
во внутреннем поле класса, которое тоже нужно добавить. Поле назови controller.
1.5. Добавь в класс Controller поля View view и Model model. Проинициализируй их в
конструкторе.
1.6. Т.к. контроллер - это наш главный класс, добавь в него метод main.


Требования:
1.	Создай пакет view и добавь в него класс View, унаследованный от JFrame.
2.	Создай пакет model и добавь в него класс Model.
3.	Создай пакет controller и добавь в него класс Controller с конструктором по умолчанию.
4.	Добавь в класс View конструктор, который будет принимать Controller и сохранять его во внутреннем поле класса, которое тоже нужно добавить. Поле назови controller.
5.	Добавь в класс Controller поля View view и Model model. Проинициализируй их в конструкторе без параметров.
6.	Добавь метод main в класс Controller.


