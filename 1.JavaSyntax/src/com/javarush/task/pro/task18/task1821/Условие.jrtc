taskKey="com.javarush.task.pro.task18.task1821"\n\nСамый дешевый автомобиль

У автомобиля, представленного классом Car, есть две характеристики: название - поле name, цена - поле price.
В классе Solution выполняются две операции поиска:
- метод getCheapestCar(Stream&lt;Car&gt;) ищет самый дешевый автомобиль в одном списке;
- метод getCheaperCar(Stream&lt;Car&gt;, Car) в другом списке ищет автомобиль дешевле, чем полученный в методе
getCheapestCar(Stream&lt;Car&gt;).

Методы возвращают не сам автомобиль (объект типа Car), а объект типа Optional&lt;Car&gt;.

Подсказка:
Для поиска элемента с минимальным искомым значением в потоке данных используй метод min(), а чтобы найти первый попавшийся подходящий элемент
из потока отфильтрованных данных используй метод findFirst().

Метод main() не принимает участие в тестировании.


Требования:
1.	В публичном статическом методе getCheapestCar(Stream&lt;Car&gt;) нужно вызывать метод min() объекта типа Stream&lt;Car&gt;.
2.	В публичном статическом методе getCheaperCar(Stream&lt;Car&gt;, Car) нужно вызывать метод findFirst() объекта типа Stream&lt;Car&gt;.
3.	Метод getCheapestCar(Stream&lt;Car&gt;) нужно реализовать согласно условию.
4.	Метод getCheaperCar(Stream&lt;Car&gt;, Car) нужно реализовать согласно условию.


