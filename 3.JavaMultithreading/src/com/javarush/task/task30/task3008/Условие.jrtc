taskKey="com.javarush.task.task30.task3008.big02"\n\nЧат (2)

Первым делом, для удобства работы с консолью реализуем класс ConsoleHelper. В
дальнейшем, вся работа с консолью должна происходить через этот класс.

Добавь в него:
1)	Статическое поле типа BufferedReader, инициализированное с помощью System.in.
2)	Статический метод writeMessage(String message), который должен выводить
сообщение message в консоль.
3)	Статический метод String readString(), который должен считывать строку с
консоли. Если во время чтения произошло исключение, вывести пользователю
сообщение &quot;Произошла ошибка при попытке ввода текста. Попробуйте еще раз.&quot; И
повторить ввод. Метод не должен пробрасывать исключения IOException наружу.
Другие исключения не должны обрабатываться.
4)	Статический метод int readInt(). Он должен возвращать введенное число и
использовать метод readString(). Внутри метода обработать исключение
NumberFormatException. Если оно произошло вывести сообщение &quot;Произошла ошибка
при попытке ввода числа. Попробуйте еще раз.&quot; И повторить ввод числа.

В этой задаче и далее, если не указано дополнительно другого, то все поля класса должны
быть приватными, а методы публичными.


Требования:
1.	В классе ConsoleHelper должно быть создано и инициализировано приватное, не финальное, статическое поле типа BufferedReader.
2.	В классе ConsoleHelper должен быть реализован статический метод writeMessage(String message), выводящий сообщение на консоль.
3.	В классе ConsoleHelper должен быть реализован статический метод readString, возвращающий строку считанную с консоли.
4.	В классе ConsoleHelper должен быть реализован статический метод readInt, возвращающий число считанное с консоли.
5.	Метод readInt должен использовать метод readString для чтения с консоли.
6.	Метод readString должен перехватывать IOException, выводить сообщение о некорректном вводе и повторять считывание с консоли.
7.	Метод readInt должен перехватывать NumberFormatException, выводить сообщение о некорректном вводе и повторять считывание с консоли.


Чат (2)

Сегодня мы напишем чат. Набор программ с помощью которого можно будет
обмениваться текстовыми сообщения. Набор будет состоять из одного сервера и
нескольких клиентов, по одному для каждого участника чата.

Начнем с сервера. Нам понадобятся такие классы:
1) Server &ndash; основной класс сервера.
2) MessageType &ndash; enum, который отвечает за тип сообщений пересылаемых между
клиентом и сервером.
3) Message &ndash; класс, отвечающий за пересылаемые сообщения.
4) Connection &ndash; класс соединения между клиентом и сервером.
5) ConsoleHelper &ndash; вспомогательный класс, для чтения или записи в консоль.

Создай эти классы и добавь метод main в класс Server.



