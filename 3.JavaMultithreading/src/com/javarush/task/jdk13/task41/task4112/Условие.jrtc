taskKey="com.javarush.task.jdk13.task41.task4112"\n\nШаром покати

Для симуляции боулинга имеем следующие классы:
- Bowling - представляет собой зал для игры в боулинг. Может сдавать в аренду дорожки и обувь для боулинга;
- Track - дорожка для боулинга, у которой есть номер и стоимость аренды;
- PairOfShoes - пара обуви, которую арендуют игроки. У нее есть размер;
- Bowler - игрок в боулинг, у него может быть арендованная пара обуви;
- Team - команда игроков в боулинг. У команды есть название, множество членов команды,
боулинг зал в котором команда собирается играть, и дорожка на которой команда собирается играть.

Сейчас, при запросе дорожки и обуви у класса Bowling, он просто создает и возвращает новые объекты Track и PairOfShoes.
Тебе нужно изменить этот функционал, используя объектные пулы:
1) в класс Bowling добавь два приватных финальных поля: Queue&lt;Track&gt; tracks и Queue&lt;PairOfShoes&gt; shoesShelf;
2) в имеющемся конструкторе Bowling заполни поля tracks и shoesShelf объектами:
- в очередь tracks добавь tracksNumber объектов с номерами от 1 до tracksNumber. Поле price пока можно не трогать;
- в очередь shoesShelf добавь 50 пар обуви с размером от 38 до 45;
3) измени код метода acquireTrack. Он должен получать и удалять дорожку из головы очереди tracks.
Полученной дорожке нужно установить цену, высчитанную по формуле 100 - tracks.size() * 10 и вернуть эту дорожку.
Если в очередь оказалась пуста, то вернуть null.
4) в методе releaseTrack к имеющемуся коду добавь возвращение дорожки в очередь;
5) измени код метода acquireShoes. Он должен получать и удалять из головы очереди number пар обуви и возвращать их
в виде множества. Если в очереди было меньше чем number элементов, то ничего из нее не удалять, а просто вернуть null;
6) в методе releaseShoes к имеющемуся коду добавь возвращение обуви в очередь.


Требования:
1.	Изменения должны вноситься только в класс Bowling.
2.	В классе Bowling должны быть поля tracks и shoesShelf согласно условию.
3.	Конструктор с параметром int класса Bowling должен заполнять очереди согласно условию.
4.	Метод acquireTrack должен быть реализован согласно условию.
5.	Метод releaseTrack должен возвращать полученные дорожки в очередь.
6.	Метод acquireShoes должен быть реализован согласно условию.
7.	Метод releaseShoes должен возвращать полученную обувь в очередь.


