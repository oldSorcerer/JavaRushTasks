taskKey="com.javarush.task.jdk13.task41.task4119"\n\nСтратегический шопинг

Используя шаблон Стратегия, избавься от оператора switch в методе pay класса ShoppingCart.
1. В корневой папке задачи создай пакет strategy и в нем интерфейс PaymentStrategy с одним методом void pay(int amount).
2. В пакете strategy создай классы конкретных стратегий реализующие PaymentStrategy:
CashStrategy, CreditCardStrategy и PaypalStrategy. В их методы pay помести соответствующий код из оператора switch.
- у CashStrategy должен быть конструктор по умолчанию;
- у CreditCardStrategy должно быть четыре приватных поля: String name, String cardNumber, int cvv, LocalDate expiryDate,
и конструктор с одним параметром типа Customer, который инициализирует эти поля.
- у PaypalStrategy должно быть два приватных поля: String email, String password
и конструктор с одним параметром типа Customer, который инициализирует эти поля.
3. В классе ShoppingCart создай приватное поле PaymentStrategy strategy, создай для него геттер и сеттер.
Удали поля customer и type. Измени конструктор ShoppingCart: оставь ему один параметр PaymentStrategy,
и инициализируй в нем поле strategy. В методе pay вместо оператора switch переадресуй вызов полю strategy.
Перечисление PaymentType можно удалить.
4. В методе main измени создание объектов ShoppingCart: передавай в конструктор объект нужной стратегии.


Требования:
1.	Классы CreditCard, Customer, PaypalAccount и Item не должны меняться.
2.	В пакете strategy должен существовать интерфейс PaymentStrategy с методом void pay(int).
3.	В пакете strategy должен существовать класс CashStrategy реализованный согласно условию.
4.	В пакете strategy должен существовать класс CreditCardStrategy реализованный согласно условию.
5.	В пакете strategy должен существовать класс PaypalStrategy реализованный согласно условию.
6.	Класс ShoppingCart должен быть изменен согласно условию.


