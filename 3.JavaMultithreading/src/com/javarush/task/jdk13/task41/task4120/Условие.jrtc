taskKey="com.javarush.task.jdk13.task41.task4120"\n\nИгра как жизнь

В пакете games есть три класса настольных игр. Тебе надо привести их к единому интерфейсу, но не просто,
а используя паттерн Шаблонный метод. В методах start всех игр можешь увидеть схожую последовательность:
сначала происходит инициализация игры, затем сама игра, затем окончание игры, а в конце оглашение победителя.

В пакете games создай абстрактный базовый класс BoardGame:
1) Создай в нем приватное поле playersAmount типа int и сеттер для этого поля.
2) Создай в BoardGame четыре метода для каждого из этапов игры: initialize, play, end и printWinner.
Все четыре метода сделай protected и void. Первые три метода сделай абстрактными,
чтобы каждый наследник обязан был реализовать их по своему.
А методу printWinner сделай реализацию по умолчанию, так как он будет одинаковый для всех трех игр.
Но его все еще можно будет переопределить, если понадобится.
3) Создай в BoardGame шаблонный метод start с одним параметром типа int. Сделай метод финальным
и вызови в нем по очереди setPlayersAmount, initialize, play, end и printWinner.

Унаследуй классы игр от BoardGame и реализуй в них методы initialize, play, end.
Удали из классов игр поля playersAmount и методы start (их код уже был распределен по другим местам).


Требования:
1.	Класс Solution не должен меняться.
2.	В пакете games должен существовать класс BoardGame реализованный согласно условию.
3.	Класс Catan должен быть изменен согласно условию.
4.	Класс DiceForge должен быть изменен согласно условию.
5.	Класс WelcomeTo должен быть изменен согласно условию.


