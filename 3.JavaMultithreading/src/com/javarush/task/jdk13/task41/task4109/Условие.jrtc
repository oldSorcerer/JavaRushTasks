taskKey="com.javarush.task.jdk13.task41.task4109"\n\nПротоклоны

Дана иерархия классов. Применим к ней паттерн прототип, чтобы можно было копировать объекты CguRequisition и User.
1. Во всех классах иерархии явно объяви пустой конструктор без параметров.
2. Добавь во все классы альтернативный конструктор, принимающий в качестве аргумента объект текущего класса.
Этот конструктор должен сначала передать выполнение родительскому конструктору, чтобы тот позаботился о полях,
объявленных в суперклассе, а затем скопировать из поданного объекта значения всех полей,
объявленных в рамках текущего класса.
3. В классе AbstractEntity объяви абстрактный метод AbstractEntity clone().
Реализуй его в классах CguRequisition и User. Метод должен возвращать новый объект текущего класса,
созданный с помощью конструктора из п.2.

Примечание: в конструкторе классе AbstractEntity вызывать конструктор суперкласса не нужно.
Примечание: в конструкторе класса RequisitionBase поле user должно копироваться с помощью метода clone класса User.

В результате код в методе main должен компилироваться и выводить в консоль два разных объекта User.


Требования:
1.	Во всех классах иерархии должен быть объявлен пустой конструктор без параметров.
2.	Во всех классах иерархии должен быть конструктор принимающий в качестве аргумента объект текущего класса и реализованный согласно условию.
3.	В классе AbstractEntity должен быть метод clone реализованный в классах CguRequisition и User согласно условию.


