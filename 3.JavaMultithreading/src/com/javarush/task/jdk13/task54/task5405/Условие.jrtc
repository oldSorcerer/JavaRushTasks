taskKey="com.javarush.task.jdk13.task54.task5405"\n\nБуквенная последовательность

Хакеры попытались подорвать основы мирозданья.
Помешай им!

Измени метод getLaws так, чтобы метод hackTheUniverse вывел строку &quot;Вселенная защищена лучше, чем мы думали...&quot;.


В этой задаче под "последовательностью букв" числа будем понимать последовательность букв, окруженную числами с обеих сторон в шестнадцатеричном представлении этого числа.

Например, число 6817 имеет шестнадцатеричное представление 1АА1 и содержит последовательность букв длиной 2.

Число 447355553 имеет шестнадцатеричное представление 1AAA1AA1 и содержит две последовательности букв: одну длиной 3 и одну длины 2.

Число 176845 имеет шестнадцатеричное представление 2B2CD и содержит одну последовательность букв длиной 1.

Число 4660 имеет шестнадцатеричное представление 1234 и не имеет последовательностей букв.

Число 240589 имеет шестнадцатеричное представление 3ABCD и не имеет последовательностей букв.

Число 160 имеет шестнадцатеричное представление A0 и не имеет последовательностей букв.

Реализуй метод getMaxLetterSequenceLength, который принимает положительное целое число N и возвращает длину его самой длинной последовательности букв. Метод должен возвращать 0, если число не содержит последовательности букв.



Требования:
1.	Решение должно правильно работать с примерами из метода main.
2.	Решение должно правильно работать с числами начинающимся буквами.
3.	Решение должно правильно работать с числами оканчивающимся буквами.
4. 	Решение должно правильно работать с числами состоящими из одних букв.
5. 	Решение должно правильно работать с числами состоящими из одних цифр.


