taskKey="com.javarush.task.task32.task3209.big19"\n\nHTML Editor (19)

Реализуем метод actionPerformed(ActionEvent actionEvent) у представления, этот метод
наследуется от интерфейса ActionListener и будет вызваться при выборе пунктов меню, у
которых наше представление указано в виде слушателя событий.
19.1.	Получи из события команду с помощью метода getActionCommand(). Это будет
обычная строка. По этой строке ты можешь понять какой пункт меню создал данное
событие.
19.2.	Если это команда &quot;Новый&quot;, вызови у контроллера метод createNewDocument(). В этом
пункте и далее, если необходимого метода в контроллере еще нет - создай заглушки.
19.3.	Если это команда &quot;Открыть&quot;, вызови метод openDocument().
19.4.	Если &quot;Сохранить&quot;, то вызови saveDocument().
19.5.	Если &quot;Сохранить как...&quot; - saveDocumentAs().
19.6.	Если &quot;Выход&quot; - exit().
19.7.	Если &quot;О программе&quot;, то вызови метод showAbout() у представления.
Проверь, что заработали пункты меню Выход и О программе.


Требования:
1.	Метод actionPerformed(ActionEvent actionEvent) должен получать из события команду с помощью метода getActionCommand().
2.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;Новый&quot;, метод должен вызывать у контроллера createNewDocument().
3.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;Открыть&quot;, метод должен вызывать у контроллера openDocument().
4.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;Сохранить&quot;, метод должен вызывать у контроллера saveDocument().
5.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;Сохранить как...&quot;, метод должен вызывать у контроллера saveDocumentAs().
6.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;Выход&quot;, метод должен вызывать у контроллера exit().
7.	Если в метод actionPerformed(ActionEvent actionEvent) передано событие с командой &quot;О программе&quot;, метод должен вызывать у представления showAbout().


HTML Editor (19)

Реализуй метод selectedTabChanged() представления. Этот метод вызывается, когда произошла
смена выбранной вкладки. Итак:
18.1.	Метод должен проверить, какая вкладка сейчас оказалась выбранной.
18.2.	Если выбрана вкладка с индексом 0 (html вкладка), значит нам нужно получить текст из
plainTextPane и установить его в контроллер с помощью метода setPlainText.
18.3.	Если выбрана вкладка с индексом 1 (вкладка с html текстом), то необходимо получить
текст у контроллера с помощью метода getPlainText() и установить его в панель
plainTextPane.
18.4.	Сбросить правки (вызвать метод resetUndo представления).



HTML Editor (19)

Добавь метод String getPlainText() в контроллер. Он должен получать текст из документа со
всеми html тегами.
17.1.	Создай объект StringWriter.
17.2.	Перепиши все содержимое из документа document в созданный объект с помощью
метода write класса HTMLEditorKit.
17.3.	Как обычно, метод не должен кидать исключений.



HTML Editor (19)

Добавь метод setPlainText(String text) в контроллер. Он будет записывать переданный текст с
html тегами в документ document. При его реализации:
16.1.	Сбрось документ.
16.2.	Создай новый ридер StringReader на базе переданного текста.
16.3.	Вызови метод read() из класса HTMLEditorKit, который вычитает данные из ридера в
документ document.
16.4.	Проследи, чтобы метод не кидал исключения. Их необходимо просто логировать.



HTML Editor (19)

Добавь в контроллер метод resetDocument(), который будет сбрасывать текущий документ. Он
должен:
15.1.	Удалять у текущего документа document слушателя правок, которые можно
отменить/вернуть (найди подходящий для этого метод, унаследованный от
AbstractDocument). Слушателя нужно запросить у представления (метод getUndoListener()).
Не забудь проверить, что текущий документ существует (не null).
15.2.	Создавать новый документ по умолчанию и присваивать его полю document.
Подсказка: воспользуйся подходящим методом класса HTMLEditorKit.
15.3.	Добавлять новому документу слушателя правок.
15.4.	Вызывать у представления метод update().



HTML Editor (19)

14.1.	Добавь в класс представления метод selectHtmlTab(). Он должен:
14.1.1.	Выбирать html вкладку (переключаться на нее).
14.1.2.	Сбрасывать все правки с помощью метода, который ты реализовал ранее.
14.2.	Добавь в класс контроллера геттер для модели, в нашем случае это поле document.
14.3.	Добавь в представление метод update(), который должен получать документ у
контроллера и устанавливать его в панель редактирования htmlTextPane.
14.4.	Добавь в представление метод showAbout(), который должен показывать диалоговое
окно с информацией о программе. Информацию придумай сам, а вот тип сообщения
должен быть JOptionPane.INFORMATION_MESSAGE.



