taskKey="com.javarush.task.task32.task3209.big02"\n\nHTML Editor (2)

2.1.	Добавь в контроллер и представление по методу init(), пока без реализаций. Они будут
отвечать за инициализацию контроллера и представления.
2.2.	Теперь напишем в классе Controller метод main(). Он должен:
2.2.1.	Создавать объект представления.
2.2.2.	Создавать контроллер, используя представление.
2.2.3.	Устанавливать у представления контроллер.
2.2.4.	Инициализировать представление (вызывать метод init).
2.2.5.	Инициализировать контроллер (вызывать метод init). Контроллер должен инициализироваться после представления.
2.3.	Добавь в контроллер метод exit(), он должен вызывать статический метод exit у класса
System с параметром 0.
2.3.1.  Метод exit в классе Controller не должен быть статическим.
2.4.	Добавь в представление метод exit(), он должен вызывать exit() у контроллера.


Требования:
1.	Класс Controller должен содержать метод public void init().
2.	Класс View должен содержать метод public void init().
3.	Класс Controller должен реализовывать метод public void exit().
4.	Класс View должен реализовывать метод public void exit().
5.	Реализуй, согласно условию, метод public static void main(String[] args) у класса Controller.


HTML Editor (2)

Сегодня мы напишем HTML редактор с графическим интерфейсом. В качестве библиотеки для
создания графического интерфейса воспользуемся Swing. А в качестве архитектурного каркаса
нашего приложения будем использовать MVC модель.
1.1.	Объяви класс Controller и класс View. Класс View должен быть унаследован от JFrame и
реализовывать интерфейс ActionListener.
1.2.	Добавь в класс Controller поля, отвечающие за представление View view и модель
HTMLDocument document. Здесь и далее, классы, которые мы не объявляли, но
используем в коде скорее всего все находятся в библиотеке swing. Например, класс
HTMLDocument реализован в пакете javax.swing.text.html.
1.3.	Добавь в класс Controller поле, которое будет отвечать за файл, который сейчас открыт в
нашем редакторе (текущий файл) File currentFile.
1.4.	Добавь конструктор класса Controller. Он должен принимать в качестве параметра
представление и инициализировать соответствующее поле класса.
1.5.    Добавь в Controller пустой метод main.
1.6.	Добавь в класс View поле Controller controller.
1.7.	Добавь в класс View сеттер и геттер для поля controller.
1.8.	Добавь пустую реализацию метода, который объявлен в интерфейсе ActionListener.



