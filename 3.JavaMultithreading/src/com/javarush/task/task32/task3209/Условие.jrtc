taskKey="com.javarush.task.task32.task3209.big21"\n\nHTML Editor (21)

Для открытия или сохранения файла мы будем использовать JFileChooser из библиотеки swing.
Объекты этого типа поддерживают фильтры, унаследованные от FileFilter. Сейчас мы напишем
свой фильтр:
21.1.	Создай публичный класс HTMLFileFilter унаследованный от FileFilter.
21.2.	Мы хотим, чтобы окно выбора файла отображало только html/htm файлы или папки.
Переопредели метод accept(File f), чтобы он возвращал true, если переданный файл
директория или содержит в конце имени &quot;.html&quot; или &quot;.htm&quot; без учета регистра.
21.3.	Чтобы в окне выбора файла в описании доступных типов файлов отображался текст
&quot;HTML и HTM файлы&quot; переопредели соответствующим образом метод getDescription().


Требования:
1.	Класс HTMLFileFilter должен быть создан в отдельном файле.
2.	Класс HTMLFileFilter должен наследоваться от FileFilter.
3.	Метод accept(File f) класса HTMLFileFilter должен возвращать true, если переданный файл  - директория или содержит в конце имени &quot;.html&quot; или &quot;.htm&quot; без учета регистра.
4.	Метод accept(File f) класса HTMLFileFilter должен возвращать false, если переданный файл  - НЕ директория или НЕ содержит в конце имени &quot;.html&quot; или &quot;.htm&quot; без учета регистра.
5.	Метод getDescription() класса HTMLFileFilter должен возвращать строку &quot;HTML и HTM файлы&quot;.


HTML Editor (21)

20.1.	Реализуй метод создания нового документа createNewDocument() в контроллере. Он
должен:
20.1.1.	Выбирать html вкладку у представления.
20.1.2.	Сбрасывать текущий документ.
20.1.3.	Устанавливать новый заголовок окна, например: &quot;HTML редактор&quot;. Воспользуйся
методом setTitle(), который унаследован в нашем представлении.
20.1.4. Обнулить переменную currentFile (присвоить ей значение null).
20.2.	Реализуй метод инициализации init() контроллера. Он должен просто вызывать метод
создания нового документа.
Проверь работу пункта меню Новый.



HTML Editor (21)

Реализуем метод actionPerformed(ActionEvent actionEvent) у представления, этот метод
наследуется от интерфейса ActionListener и будет вызваться при выборе пунктов меню, у
которых наше представление указано в виде слушателя событий.
19.1.	Получи из события команду с помощью метода getActionCommand(). Это будет
обычная строка. По этой строке ты можешь понять какой пункт меню создал данное
событие.
19.2.	Если это команда &quot;Новый&quot;, вызови у контроллера метод createNewDocument(). В этом
пункте и далее, если необходимого метода в контроллере еще нет - создай заглушки.
19.3.	Если это команда &quot;Открыть&quot;, вызови метод openDocument().
19.4.	Если &quot;Сохранить&quot;, то вызови saveDocument().
19.5.	Если &quot;Сохранить как...&quot; - saveDocumentAs().
19.6.	Если &quot;Выход&quot; - exit().
19.7.	Если &quot;О программе&quot;, то вызови метод showAbout() у представления.
Проверь, что заработали пункты меню Выход и О программе.



HTML Editor (21)

Реализуй метод selectedTabChanged() представления. Этот метод вызывается, когда произошла
смена выбранной вкладки. Итак:
18.1.	Метод должен проверить, какая вкладка сейчас оказалась выбранной.
18.2.	Если выбрана вкладка с индексом 0 (html вкладка), значит нам нужно получить текст из
plainTextPane и установить его в контроллер с помощью метода setPlainText.
18.3.	Если выбрана вкладка с индексом 1 (вкладка с html текстом), то необходимо получить
текст у контроллера с помощью метода getPlainText() и установить его в панель
plainTextPane.
18.4.	Сбросить правки (вызвать метод resetUndo представления).



HTML Editor (21)

Добавь метод String getPlainText() в контроллер. Он должен получать текст из документа со
всеми html тегами.
17.1.	Создай объект StringWriter.
17.2.	Перепиши все содержимое из документа document в созданный объект с помощью
метода write класса HTMLEditorKit.
17.3.	Как обычно, метод не должен кидать исключений.



HTML Editor (21)

Добавь метод setPlainText(String text) в контроллер. Он будет записывать переданный текст с
html тегами в документ document. При его реализации:
16.1.	Сбрось документ.
16.2.	Создай новый ридер StringReader на базе переданного текста.
16.3.	Вызови метод read() из класса HTMLEditorKit, который вычитает данные из ридера в
документ document.
16.4.	Проследи, чтобы метод не кидал исключения. Их необходимо просто логировать.



