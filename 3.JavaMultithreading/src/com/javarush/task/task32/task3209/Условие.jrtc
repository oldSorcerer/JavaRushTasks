taskKey="com.javarush.task.task32.task3209.big18"\n\nHTML Editor (18)

Реализуй метод selectedTabChanged() представления. Этот метод вызывается, когда произошла
смена выбранной вкладки. Итак:
18.1.	Метод должен проверить, какая вкладка сейчас оказалась выбранной.
18.2.	Если выбрана вкладка с индексом 0 (html вкладка), значит нам нужно получить текст из
plainTextPane и установить его в контроллер с помощью метода setPlainText.
18.3.	Если выбрана вкладка с индексом 1 (вкладка с html текстом), то необходимо получить
текст у контроллера с помощью метода getPlainText() и установить его в панель
plainTextPane.
18.4.	Сбросить правки (вызвать метод resetUndo представления).


Требования:
1.	Метод selectedTabChanged() должен проверить, какая вкладка сейчас оказалась выбранной.
2.	Если индекс вкладки равен 0 - метод selectedTabChanged() должен получить текст из plainTextPane и установить его в контроллер с помощью метода setPlainText().
3.	Если индекс вкладки равен 1 - метод selectedTabChanged() должен получить текст у контроллера с помощью метода getPlainText() и установить его в панель plainTextPane.
4.	Метод selectedTabChanged() должен сбросить правки.


HTML Editor (18)

Добавь метод String getPlainText() в контроллер. Он должен получать текст из документа со
всеми html тегами.
17.1.	Создай объект StringWriter.
17.2.	Перепиши все содержимое из документа document в созданный объект с помощью
метода write класса HTMLEditorKit.
17.3.	Как обычно, метод не должен кидать исключений.



HTML Editor (18)

Добавь метод setPlainText(String text) в контроллер. Он будет записывать переданный текст с
html тегами в документ document. При его реализации:
16.1.	Сбрось документ.
16.2.	Создай новый ридер StringReader на базе переданного текста.
16.3.	Вызови метод read() из класса HTMLEditorKit, который вычитает данные из ридера в
документ document.
16.4.	Проследи, чтобы метод не кидал исключения. Их необходимо просто логировать.



HTML Editor (18)

Добавь в контроллер метод resetDocument(), который будет сбрасывать текущий документ. Он
должен:
15.1.	Удалять у текущего документа document слушателя правок, которые можно
отменить/вернуть (найди подходящий для этого метод, унаследованный от
AbstractDocument). Слушателя нужно запросить у представления (метод getUndoListener()).
Не забудь проверить, что текущий документ существует (не null).
15.2.	Создавать новый документ по умолчанию и присваивать его полю document.
Подсказка: воспользуйся подходящим методом класса HTMLEditorKit.
15.3.	Добавлять новому документу слушателя правок.
15.4.	Вызывать у представления метод update().



HTML Editor (18)

14.1.	Добавь в класс представления метод selectHtmlTab(). Он должен:
14.1.1.	Выбирать html вкладку (переключаться на нее).
14.1.2.	Сбрасывать все правки с помощью метода, который ты реализовал ранее.
14.2.	Добавь в класс контроллера геттер для модели, в нашем случае это поле document.
14.3.	Добавь в представление метод update(), который должен получать документ у
контроллера и устанавливать его в панель редактирования htmlTextPane.
14.4.	Добавь в представление метод showAbout(), который должен показывать диалоговое
окно с информацией о программе. Информацию придумай сам, а вот тип сообщения
должен быть JOptionPane.INFORMATION_MESSAGE.



HTML Editor (18)

Реализуем класс TextEditMenuListener в пакет listeners. Этот класс будет работать аналогично
классу UndoMenuListener только для других пунктов меню. Пункты меню, отвечающие за
стиль, шрифт, цвет и т.д. должны быть доступны только тогда, когда в нашем редакторе
выбрана первая вкладка.
13.1.	Добавь в представление метод boolean isHtmlTabSelected(). Он должен возвращать
true, если выбрана вкладка, отображающая html в панели вкладок (подсказка: ее индекс 0).
13.2.	Добавь в класс TextEditMenuListener поле View, проинициализируй его в конструкторе
класса.
13.3.	В классе TextEditMenuListener переопредели метод menuSelected(MenuEvent
menuEvent). Он должен:
13.3.1.	Из переданного параметра получать объект, над которым было совершено действие. В
нашем случае это будет объект с типом JMenu.
13.3.2.	У полученного меню получать список компонентов (пунктов меню).
13.3.3.	Для каждого пункта меню вызывать метод setEnabled, передав в качестве параметра
результат вызова метода isHtmlTabSelected() из представления.
Запусти приложение и убедись, что пункты меню стиль, выравнивание, цвет и шрифт доступны
только, когда активна закладка HTML и не доступны для закладки Текст.



