taskKey="com.javarush.task.sql.task12.task1205"\n\nСохранить аудио файл в БД

Если ранее не подключал зависимости, то подключи их. Для этого Alt + Ctrl + Shift + S (в Идее), вкладка Libraries.
Зависимости можна скачать здесь: https://javarush.ru/downloads/ide/javarush/hibernate.zip
Архив распакуй, и каждую зависимость добавь к модулю. Эта часть задания не проверяется, но если ее не выполнить - ты не сможешь локально выполнять код.

Главная цель задачи - успешно сохранить аудио файл в sql базу данных, в виде массива байтов.
Для этого тебе потребуется:
1) Добавь в публичный класс Audio приватные поля: id (Long), fileName (String), audioFile (byte[]) и fileProperties (Map&lt;String, String&gt;).
2) У класса Audio должны присутствовать аннотации @Entity и @Table (имя таблицы audio_table, схема - test).
3) У всех полей должны присутствовать геттеры и сеттеры.
4) У всех полей должны присутствовать соответствующие аннотации.
4.1) У поля id должна присутствовать аннотация @Id.
4.2) У поля fileName должна присутствовать аннотация @Column, в которой указано имя колонки &quot;file_name&quot;.
4.3) У поля audioFile должна присутствовать аннотация @Lob, и @Column, в которой указано имя колонки &quot;audio_file&quot;.
4.4) У поля fileProperties должна присутствовать аннотация @Type с типом &quot;json&quot;, и @Column, в которой указано имя колонки &quot;file_meta&quot;.
5) В методе saveAudioFile класса Solution сохрани объект класса Audio и сделай коммит, используя методы getSessionFactory и getAudioBuffer. Номер id, имя файла и мета данные не участвуют в тестировании.

Для успешной работы программы тебе потребуется:
- Локально запустить sql сервер (localhost:3306) и создать базу данных с нужной схемой, таблицей и колонками. В базе данных следует учесть, что тип данных колонки audio_file может различаться, в зависимости от размера данных.
- В методе getAudioBuffer заменить ссылку на локальный аудио файл. Данный метод не участвует в тестировании.

Hint: тебе потребуется dependency от com.vladmihalcea, с artifactId &quot;hibernate-types-55&quot; и версией 2.19.2.


Требования:
1.	Класс Audio должен быть публичным и содержать четыре приватных поля согласно условиям.
2.	В классе Audio у полей должны быть публичные геттеры и сеттеры.
3.	В классе Audio аннотации уровня класса должны быть расставлены согласно условиям.
4.	В классе Audio аннотации уровня поля должны быть расставлены согласно условиям.
5.	Не изменяй метод getSessionFactory класса Solution.
6.	Не изменяй метод main класса Solution.
7.	В методе saveAudioFile класса Solution создай объект класса Audio и используй все нужные сеттеры.
8.	В методе saveAudioFile класса Solution сохрани объект класса Audio в базу данных согласно условиям.


