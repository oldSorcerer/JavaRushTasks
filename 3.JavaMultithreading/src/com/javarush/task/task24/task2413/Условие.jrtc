taskKey="com.javarush.task.task24.task2413.big07"\n\nАрканоид(7)

Теперь перейдем к классу BaseObject.
Я хочу сделать несколько предложений.

Во-первых для простоты считать что все объекты у нас будут круглыми.
Нет, отрисовывать их мы будем фигурными, как и раньше.
А вот при расчетах из взаимодействия исходить из того, что они круглые.
Так - гораздо проще.

Во-вторых. Пусть координаты объектов и радиус будут вещественными числами.
Это придаст плавность движениям и точность всем вычислениям.
А при отрисовке мы будем их округлять.

Итак:
а) Добавь в класс BaseObject приватные поля x (double), y (double), radius (double).
б) Добавь геттеры и сеттеры.
в) Добавь конструктор BaseObject(double x, double y, double radius).
г) Пройдись по всем классам-наследникам и поправь у них конструкторы.

Если ты используешь Intellij IDEA - Alt+Insert тебе в помощь.


Требования:
1.	В классе BaseObject должно быть создано приватное поле x типа double.
2.	В классе BaseObject должно быть создано приватное поле y типа double.
3.	В классе BaseObject должно быть создано приватное поле radius типа double.
4.	В классе BaseObject должен быть создан корректно работающий конструктор с тремя параметрами типа double (x, y, radius).
5.	В классе Ball должен быть создан корректно работающий конструктор с тремя параметрами типа double (x, y, radius).
6.	В классе Brick должен быть создан корректно работающий конструктор с тремя параметрами типа double (x, y, radius).
7.	В классе Stand должен быть создан корректно работающий конструктор с тремя параметрами типа double (x, y, radius).
8.	В классе BaseObject должен быть создан публичный геттер для поля x.
9.	В классе BaseObject должен быть создан публичный геттер для поля y.
10.	В классе BaseObject должен быть создан публичный геттер для поля radius.
11.	В классе BaseObject должен быть создан публичный сеттер для поля x.
12.	В классе BaseObject должен быть создан публичный сеттер для поля y.
13.	В классе BaseObject должен быть создан публичный сеттер для поля radius.


Арканоид(7)

У нас будут &quot;кирпичи&quot;, &quot;шарик&quot; и &quot;подставка&quot; и у них будет много общего.
Они будут перемещаться по полю и отрисовываться.
Значит у них у всех будут координаты и размер.
А еще методы move() - для перемещения и draw() для отрисовки.

Есть интересное предложение: давай введем один базовый класс для всех объектов.
Пусть это будет класс BaseObject.
А классы Ball, Stand, Brick от него наследуются.

Создай класс BaseObject и добавь его родителем к классам  Ball, Stand, Brick.

Еще нам понадобится класс Canvas.
Он будет ответственным за &quot;отрисовку&quot; объектов.
С помощью его они будут отрисовывать себя.
Вернее даже на нем, но детали я сообщу позднее.

Создай и этот класс.



Арканоид(7)

Чего еще не хватает классу Arkanoid?
Во-первых ему нужен метод run(), в котором будет описана основная логика программы.
Еще нужен метод move() - который будет двигать на один шаг все объекты требующие движения.
Создай методы run() и move().

Еще нам понадобится НЕ приватная статическая переменная game типа Arkanoid, которая будет хранить ссылку
на созданный экземпляр класса Arkanoid.
Выглядеть это должно примерно так:
static Arkanoid game;



Арканоид(7)

Также классу Arkanoid нужно будет хранить ссылку на шарик (Ball), &quot;подставку&quot; Stand и список &quot;кирпичей&quot;.

Нужно в классе Arkanoid:
а) создать приватное поле ball типа Ball
б) создать приватное поле stand типа Stand
в) создать приватное поле bricks типа List&lt;Brick&gt;
г) добавить для них публичные геттеры и сеттеры



Арканоид(7)

Пожалуй, пора добавить конструктор в класс Arkanoid.
Конструктор должен принимать два параметра типа int (width и height) и корректно устанавливать значения соответствующих полей класса.



Арканоид(7)

Главному классу (Arkanoid) нужно будет хранить информацию о размерах поля, где будут происходить все действия.

Поэтому:
а) добавь в класс Arkanoid два приватных поля width(ширина) и height(высота) типа int
б) создай для них публичные геттеры и сеттеры



