taskKey="com.javarush.task.task23.task2312.big09"\n\nЗмейка(9)

Еще остался самый главный класс - Room.
Что нам нужно для его описания?
Размеры комнаты (width и height) - раз.
Змея - два
Мышь - три.

Надо:
а) создать в классе Room переменные width и height типа int.
б) создать в классе Room переменную snake типа Snake.
в) создать в классе Room переменную mouse типа Snake. Шучу. Типа Mouse, конечно же :).
г) создать для них всех геттеры и сеттеры.
д) создать конструктор. Конструктор должен принимать три параметра: width, height и ... snake!


Требования:
1.	В классе Room должна быть создана приватная переменная width типа int.
2.	В классе Room должна быть создана приватная переменная height типа int.
3.	В классе Room должна быть создана приватная переменная snake типа Snake.
4.	В классе Room должна быть создана приватная переменная mouse типа Mouse.
5.	В классе Room должен быть создан корректный публичный геттер для поля width.
6.	В классе Room должен быть создан корректный публичный геттер для поля height.
7.	В классе Room должен быть создан корректный публичный геттер для поля snake.
8.	В классе Room должен быть создан корректный публичный геттер для поля mouse.
9.	В классе Room должен быть создан корректный публичный сеттер для поля width.
10.	В классе Room должен быть создан корректный публичный сеттер для поля height.
11.	В классе Room должен быть создан корректный публичный сеттер для поля snake.
12.	В классе Room должен быть создан корректный публичный сеттер для поля mouse.
13.	В классе Room должен быть создан корректный публичный конструктор с параметрами int, int и Snake(width, height и snake).


Змейка(9)

Настала очередь конструктора класса Snake.

Змея у нас будет поначалу состоять из одного кусочка - головы.
А что для него требуется?
Что необходимо передать в конструктор?
Координаты змеи, конечно же.

Надо:
а) Передать в конструктор координаты головы змеи (x и y).
б) создать в нем первый &quot;кусочек змеи&quot; (голову) и добавить его в коллекцию sections (ArrayList).
в) isAlive выставить в true.
г) не забудь в конструкторе инициализировать переменную sections. В null не много-то и добавишь!
д) создать и реализовать метод int getX(). Метод должен вернуть координату Х головы змеи.
е) создать и реализовать метод int getY(). Метод должен вернуть координату Y головы змеи.
ж) еще добавить классу метод move()- он нам пригодится попозже.
з) созданный конструктор должен быть публичным.



Змейка(9)

&quot;Кусочки змеи&quot; мы описали, теперь займемся самой змеей.

У змеи должен быть список кусочков(SnakeSection) и голова.
Пусть головой будет просто самый первый кусочек (с номером 0).

У змеи также есть направление движения - сторона, куда она движется по умолчанию.
А еще есть состояние - жива змея или мертва.
Игра заканчивается тогда, когда змея мертва.

Надо:
а) Добавить в класс Snake поле sections типа List&lt;SnakeSection&gt;.
б) Добавить поле isAlive типа boolean.
в) Добавить поле direction типа SnakeDirection.
г) Для всех полей добавить getter&#39;ы, а для direction еще и setter.

Примечание:
Для полей логического типа геттер принято писать не как getValue(), а как isValue() - это улучшает читабельность кода.
Только не пиши isIsAlive(). Одного is будет вполне достаточно.
Примечание 2:
Все поля создаваемые в этом задании должны быть приватными, а методы - публичными.



Змейка(9)

Теперь займемся классом SnakeSection.
Он будет описывать один кусочек змеи.

А у каждого кусочка что есть?
Правильно! Координаты.

Добавь два поля в класс SnakeSection: x и y типа int.
Добавь для них getter&#39;ы и конструктор с двумя параметрами типа int.



Змейка(9)

Теперь доделаем enum SnakeDirection так, чтобы он содержал возможные направления движения змейки.

Добавь 4 значения UP, DOWN, LEFT, RIGHT.

Должно получиться примерно так:
public enum  SnakeDirection
{
UP,
RIGHT,
DOWN,
LEFT
}



Змейка(9)

Координаты x и y ты уже создал в классе Mouse, а как получить к ним доступ?
Создай корректные геттеры для этих полей и конструктор с двумя параметрами типа int (x и y соответственно).



