taskKey="com.javarush.games.racer.part04"\n\nИгра Racer (4/28)

В процессе игры появятся много объектов, которые будут двигаться по игровому полю и иногда его покидать.
В случае вызова метода setCellColor(int, int, Color) с координатами, лежащими за пределами игрового поля, будет выбрасываться исключение.
Чтобы этого не произошло, переопредели его таким образом, чтобы вызов родительского метода происходил только с координатами, лежащими на игровом поле.
Подсказка: для вызова родительского метода используй ключевое слово super.


Требования:
1.	В классе RacerGame должен быть переопределен метод setCellColor(int, int, Color) родительского класса Game.
2.	В методе setCellColor(int, int, Color), если параметр метода x находится за пределами поля, метод не должен ничего делать.
3.	В методе setCellColor(int, int, Color), если параметр метода y находится за пределами поля, метод не должен ничего делать.
4.	В методе setCellColor(int, int, Color) должен вызываться метод базового класса, используя ключевое слово super.


Игра Racer (4/28)

Приступим к отрисовке трассы в методе drawField().
Для установки цвета определенной ячейке используется метод setCellColor(int, int, Color). В качестве аргументов передаются координаты x, y и цвет.
Нужно учесть, что игровое поле состоит из трех зон, которые должны быть раскрашены разными цветами:
1. Обочина - боковые части игрового поля, по которым не осуществляется движение.
Высота: вся высота игрового поля;
Ширина: от 0 до ROADSIDE_WIDTH (не включительно) и от WIDTH - ROADSIDE_WIDTH (включительно) до WIDTH.
2. Дорога - дорожное полотно, по которому будут двигаться машины.
Высота: вся высота игрового поля;
Ширина: от ROADSIDE_WIDTH(включительно) до WIDTH - ROADSIDE_WIDTH (не включительно), кроме CENTER_X.
3. Разделительная полоса - белая полоса, которая разделяет дорогу пополам.
Высота: вся высота игрового поля;
Ширина: 1 клетка игрового поля, с координатой x = CENTER_X.
Раскраска делается в цикле.
В результате должна получиться примерно такая трасса:
!! картинка !!
P.S.: Цвета можешь выбрать на свое усмотрение.




Игра Racer (4/28)

Теперь подготовим игровое поле.
В этой части создадим переменные и методы, с помощью которых в будущем отрисуем дорогу и дорожную разметку.
По центру дороги будет расположена разделительная полоса.
Значение ее координаты по оси x равно половине ширины игрового поля и хранится в переменной CENTER_X.
По бокам будет расположена обочина. Ее ширина равна 14 и хранится в переменной ROADSIDE_WIDTH.

Создадим вспомогательные методы:
createGame() - для старта новой игры;
drawScene() - для отрисовки всех игровых объектов;
drawField() - для отрисовки фона игрового поля.



Игра Racer (4/28)

Предлагаем тебе написать увлекательную игру Racer. Начнем с правил.
1. Цель игры &mdash; достигнуть финиша, управляя гоночной машиной на оживленной трассе.
2. Количество очков зависит от длительности гонки: чем раньше игрок финиширует, тем больше очков
он получит.
3. Игра окончена, когда игрок сталкивается с другой машиной или препятствием.

Создадим главный класс игры RacerGame. Чтобы использовать функциональность игрового движка, унаследуем его от класса Game, который содержит в себе методы для реализации игры.
Для начала нам нужно игровое поле (64х64), на которое будут добавляться игровые объекты. Так как значения высоты и ширины поля будут часто использоваться при реализации логики игры, есть смысл создать константы WIDTH и HEIGHT.
Перед запуском игры выполняется метод initialize(), задачей которого является установка начального состояния игры. Его нужно переопределить в классе RacerGame.
В методе initialize() необходимо:
- задать размер игрового поля, вызвав setScreenSize(WIDTH, HEIGHT);
- убрать отображение сетки, вызвав showGrid(false).
Чтобы успешно справиться с задачей Racer, рекомендуем прочесть статью про раздел &quot;Игры&quot;. В ней ты найдешь информацию, которая будет полезна при написании игр.



