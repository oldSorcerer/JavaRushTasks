taskKey="com.javarush.games.ticktacktoe.part12"\n\nИгра крестики-нолики (12/24)

Как вы надеюсь помните, в игре Крестики-Нолики выигрывает тот, кто первый заполнит крестиками (или ноликами) вертикаль, горизонталь или диагональ.
Ранее в методе checkWin() мы добавляли проверку только на вертикаль и горизонталь. Теперь вам нужно улучшить работу метода checkWin() - добавьте в него проверку диагоналей.
Метод должен вернуть true если есть вертикаль, горизонталь, или диагональ, заполненная значением n. Иначе, метод должен вернуть false.


Требования:
1.	Метод checkWin(x, y, n) должен возвращать true если есть вертикаль заполненная n.
2.	Метод checkWin(x, y, n) должен возвращать true если есть горизонталь заполненная n.
3.	Метод checkWin(x, y, n) должен возвращать true если основная диагональ заполнена n.
4.	Метод checkWin(x, y, n) должен возвращать true если обратная диагональ заполнена n.
5.	Метод checkWin(x, y, n) должен возвращать false во всех остальных случаях.


Игра крестики-нолики (12/24)

Метод, который определяет победителя у нас есть, теперь вам нужно вызвать его в правильном месте. Предлагаем сделать это в самом конце метода onMouseLeftClick(), но перед переключением номера игрока.
В методе onMouseLeftClick() перед переключением номера игрока добавьте такую проверку: если есть выигравший игрок, то а) закончить игру, б) отобразить победителя:
- Если checkWin() вернул true, то нужно установить переменной isGameStopped значение true
- Отобразить победителя вызвав метод showMessageDialog().
- Завершить выполнение метода
Отобразить победителя можно с помощью диалогового окна, вызвав метод  showMessageDialog(), котрый принимает такие параметры:
- cellColor - цвет диалогового окна
- text - текст сообщения
- textColor - цвет текста
- textSize - размер текста в процентах от высоты окна
Пример:
showMessageDialog(Color.NONE, &quot; Player #&quot; + currentPlayer + &quot; win!&quot;, Color.GREEN, 75);



Игра крестики-нолики (12/24)

Теперь настало время добавить проверку, что кто-то из игроков выиграл. Каждый раз после того, как игрок сделал ход, нужно проверить не победил ли он?
Для этой проверки создайте метод public boolean checkWin(int x, int y, int n), который принимает координаты клетки куда был поставлен знак (Х или О), и номер походившего игрока.
Метод checkWin() должен вернуть true, если есть вертикаль или горизонталь заполненная значением n. Иначе, метод должен вернуть false.



Игра крестики-нолики (12/24)

Чтобы создать игру обычно нужно реализовать три части логики:
- Логика начала игры
- Логика игры: ходы игроков и компьютера
- Логика завершения игры
Инициализация игры у нас есть, логику ходов мы тоже реализовали. Но вечно ставить крестики и нолики нельзя,
так что теперь вам нужно добавить обработку окончания игры.
Теперь реализуйте логику завершения игры:
Создайте переменную private boolean isGameStopped. В ней будем хранить состояние игры:
- true &mdash; игра остановлена,
- false &mdash; игра продолжается.
Каждая новая игра начинается в методе startGame(), поэтому в нем же присвойте переменной isGameStopped значение false.
А в самом начале метода onMouseLeftClick() добавьте проверку, и если игра остановлена &mdash; прервите выполнение метода onMouseLeftClick() выполнив оператор return.



Игра крестики-нолики (12/24)

Важное дополнение. По правилам игры ход можно делать только в пустую клетку (у которой в model стоит значение 0).
Добавьте этот запрет в начало метода onMouseLeftClick().
Если клетка (х,y) содержит значение отличное от нуля, то нужно тут же прекратить выполнение метода onMouseLeftClick() выполнив оператор return.



Игра крестики-нолики (12/24)

При создании игры красота и анимация не менее важна, чем внутренняя логика игры.  Поэтому давайте сделаем нашу игру более красочной и яркой.  Раскрасьте каждый &quot;Х&quot; красным цветом, а &quot;O&quot; - синим.
Для этого вам вместо метод setCellValue(x, y, text) нужно воспользоваться методом setCellValueEx(x, y, cellColor, text, textColor)
В отличии от метода setCellValue(x, y, value), метод setCellValueEx(x, y, cellColor, text, textColor) принимает аж 5 параметров
- x, y &ndash; координаты ячейки
- cellColor &ndash; цвет фона ячейки
- text &ndash; текст, который нужно отобразить в ячейке
- textColor &ndash; цвет текста, который нужно отобразить
Примеры:
- setCellValueEx(1, 1, Color.WHITE, &quot;Красный&quot;, Color.RED);
- setCellValueEx(2, 3, Color.WHITE, &quot;Желтый&quot;, Color.YELLOW);
- setCellValueEx(0, 2, Color.WHITE, &quot;Зеленый&quot;, Color.GREEN);



