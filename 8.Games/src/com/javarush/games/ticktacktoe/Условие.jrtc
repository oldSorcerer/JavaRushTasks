taskKey="com.javarush.games.ticktacktoe.part19"\n\nИгра крестики-нолики (19/24)

Играть с человеком легко. Давайте переделаем свою игру так, чтобы человек играл с компьютером.
Сейчас вы на себе узнаете, насколько легко и просто реализовать качественны ИИ. Приступим&hellip;
Для начала создадим метод public void computerTurn(). Этот метод будет выполнять ход компьютера - делать ход в определенную клетку.
Метод computerTurn() нужно вызвать в самом конце метода onMouseLeftClick() и после этого еще раз сменить текущего игрока: currentPlayer = 3 - currentPlayer;.
В методе onMouseLeftClick() теперь будет происходить два хода:
- сначала ход человека в клетку, которую он выбрал
- затем переключение текущего игрока
- затем ход компьютера
- снова переключение текущего игрока


Требования:
1.	Создайте метод public void computerTurn().
2.	В методе onMouseLeftClick() должен быть вызван метод computerTurn().
3.	Метод onMouseLeftClick() в конце должен вернуть переменной currentPlayer значение 1.


Игра крестики-нолики (19/24)

Игра почти готова, теперь можно сделать ее еще более красивой. Думаю, настало время улучшить текстовые сообщения.
Вам нужно заменить сообщения &quot;Player #1/2 win!&quot;  на сообщения &quot;You Win!&quot; и &quot;Game Over&quot;:
- &quot;You Win!&quot; нужно отобразить зеленым цветом, если первый игрок выиграл.
- &quot;Game Over&quot; нужно отображать красным, если первый игрок проиграл - выиграл второй.
Изменения нужно делать в методе setSignAndCheck().



Игра крестики-нолики (19/24)

Давайте еще улучшим нашу игру. Допустим игрок сделал ошибочный ход, и ему хочется начать игру заново.
Для этого совсем не обязательно ждать окончания игры. Давайте добавим возможность расторговать игру в любое время.
Делать это будем по нажатию клавиши Esc на клавиатуре: если пользователь нажал ESC, то стартануть игру заново. Даже если она еще не закончена.
Старая логика по-прежнему должна работать: если пользователь нажал пробел, и игра была закончена, то стартовать игру заново.
Пример проверки нажатия клавиши Esc:
if (key == Key.ESCAPE) { ... }



Игра крестики-нолики (19/24)

После того как игра завершилась, пользователи могут захотеть сыграть еще пару партий - надо им в этом помочь.
Давайте добавим возможность начинать новую игру по нажатию клавиши на клавиатуре.
Для этого создадим метод public void onKeyPress(Key key). Он будет автоматически вызываться игровым движком,
когда пользователь нажал любую клавишу на клавиатуре.
В этом методе вам нужно добавить проверку: если пользователь нажал пробел, и игра была закончена, то стартовать игру заново.
А чтобы стартовать игру заново вам нужно вызнать методы startGame() и updateView().
Пример проверки нажатия клавиши пробел:
if (key == Key.SPACE) { ... }



Игра крестики-нолики (19/24)

Если пустых клеток на поле не осталось и нет победителя, то нужно отобразить сообщение о ничьей.
В конце метода setSignAndCheck() с помощью hasEmptyCell() нужно проверить наличие пустых клеток на поле,
и если пустых клеток не осталось &mdash; завершить игру:
- показать сообщение о ничьей.
- установить isGameStopped значение true
Важно:
Обратите внимание, что сообщение о ничьей нужно показать не просто &laquo;когда не осталось пустых клеток&raquo;, а &laquo;когда не осталось пустых клеток и нет победителя&raquo;.
Ведь легко может сложиться ситуация, когда игрок выиграл игру, сделав ход в последнюю клетку.
Пример сообщения о ничьей:
showMessageDialog(Color.NONE, &quot; Draw!&quot;,  Color.BLUE, 75);



Игра крестики-нолики (19/24)

Кроме проверки победы игрока, нужно еще проверять, что на поле остались пустые клетки. Если пустых клеток не осталось и нет победителя,
то нужно отобразить сообщение о ничьей. Обратите внимание, что это мы все еще реализуем логику окончания игры. Не так просто, как казалось, да?
Создайте новый метод public boolean hasEmptyCell() &ndash; он будет проверять, есть ли еще на поле пустые клетки.
В этом методы вы должны пройтись по всем значениям в массиве model и вернуть true, если хотя бы одно значение равно нулю. Иначе метод должен вернуть false.



