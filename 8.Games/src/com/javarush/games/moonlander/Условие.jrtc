taskKey="com.javarush.games.moonlander.part20"\n\nИгра Moon Lander (20/23)

На данном этапе мы отрисуем нашу первую анимацию. Нам понадобятся методы show и hide, которые будут отвечать
за отображение и скрытие реактивной тяги, а также метод switchFire который будет задавать координаты тяги и вызывать
методы show и hide в зависимости от переданного параметра. Чтобы реактивная тяга отображалась внизу по центру
ракеты, нужно установить для нее координаты x и y определенным образом:
- в поле x огня мы устанавливаем значение x (позиция левой границы) ракеты + ширина ракеты, поделенная на 2. Таким образом
x тяги окажется посредине ракеты;
- в поле y огня мы устанавливаем значение y (позиция верхней границы) ракеты + высота ракеты. Таким образом y тяги окажется
внизу ракеты;
Не забудь вызвать метод switchFire в методе move &mdash; это позволит переключать анимацию при каждом ходе игры.
Кроме того, нам нужно переопределить метод draw ракеты, чтобы иметь возможность рисовать тягу вместе с ракетой.


Требования:
1.	В классе RocketFire должен существовать публичный метод void show().
2.	В методе show() полю isVisible должно устанавливаться значение true.
3.	В классе RocketFire должен существовать публичный метод void hide().
4.	В методе hide() полю isVisible должно устанавливаться значение false.
5.	В классе Rocket должен существовать приватный метод void switchFire(boolean isUpPressed).
6.	В методе switchFire(boolean) необходимо установить объекту downFire значение поля x, равное x ракеты + (width / 2) ракеты, если значение параметра метода true.
7.	В методе switchFire(boolean) необходимо установить объекту downFire значение поля y, равное y ракеты + height ракеты, если значение параметра метода true.
8.	В методе switchFire(boolean) необходимо вызвать у объекта downFire метод show(), если значение параметра метода true.
9.	В методе switchFire(boolean) необходимо вызвать у объекта downFire метод hide(), если значение параметра метода false.
10.	В методе move(boolean, boolean, boolean) класса Rocket последним необходимо вызвать метод switchFire(boolean) с параметром isUpPressed.
11.	В классе Rocket должен быть переопределен метод draw(Game) родительского класса GameObject.
12.	В методе draw(Game) класса Rocket необходимо вызвать метод базового класса, используя ключевое слово &quot;super&quot;.
13.	В методе draw(Game) класса Rocket необходимо вызвать метод draw(Game) у объекта downFire.


Игра Moon Lander (20/23)

На этом этапе мы будем дорабатывать отображение анимации реактивной тяги. Добавим и реализуем метод nextFrame(), который
будет переключать кадры для создания анимации (устанавливать текущую матрицу из frames в переменную matrix).
Также переопределим метод draw, который будет менять кадр для анимации (вызвав метод nextFrame) и вызывать метод
суперкласса для отрисовки в том случае, если isVisible == true.



Игра Moon Lander (20/23)

Продолжаем реализацию реактивной тяги. На этом этапе в класс Rocket мы добавим переменные, которые описывают
правую, левую и нижнюю тяги. Заполним эти поля в конструкторе соответствующими матрицами из класса ShapeMatrix,
которые мы подготовили заранее.



Игра Moon Lander (20/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (20/23)

Займемся методом, отвечающим за крушение ракеты при ее пересечении с ландшафтом. Этот метод будет менять внешнее
отображение ракеты путем замены ее матрицы (матрицу ты найдешь в классе ShapeMatrix). Теперь реализуем метод gameOver.
Он должен вызвать метод crash у ракеты, показать сообщение о проигрыше и остановить игру. Кроме того, добавим перезапуск
игры при нажатии клавиши SPACE.



Игра Moon Lander (20/23)

Создадим метод land, который будет отвечать за приземление ракеты. Так как приземлением считается пересечение
ракеты и платформы, для корректного отображения нам нужно поднять ракету на одну позицию вверх, чтобы она не &quot;наезжала&quot;
на платформу. Еще нам понадобится специальное поле, которое будет отвечать за остановку игры. В начале игры значение
этого поля будет false. Когда нужно остановить игру, мы будем устанавливать ему значение true.
Теперь займемся реализацией метода win. Он должен вызвать метод land у ракеты, показать сообщение
о выигрыше и остановить игру.



