taskKey="com.javarush.games.moonlander.part21"\n\nИгра Moon Lander (21/23)

Чтобы полностью реализовать анимацию, необходимо в методе switchFire учесть наличие боковых огней.
Поэтому в параметры существующего метода switchFire добавим переменные, отвечающие за нажатие клавиш движения в стороны,
т.е. первым параметром метода будет isUpPressed, вторым &mdash; isLeftPressed, третьим &mdash; isRightPressed.
Также по аналогии с обработкой параметра isUpPressed добавим обработку isLeftPressed и isRightPressed.
Обрати внимание, что координата x у разных огней разная, а координата y &mdash; одинаковая. Не забудь исправить вызов метода switchFire.


Требования:
1.	В классе Rocket должен существовать приватный метод void switchFire(boolean isUpPressed, boolean isLeftPressed, boolean isRightPressed).
2.	В классе Rocket не должен существовать приватный метод void switchFire(boolean).
3.	В методе switchFire(boolean, boolean, boolean) необходимо установить объекту leftFire значение поля x, равное x ракеты + width ракеты, если значение параметра isLeftPressed метода равно true.
4.	В методе switchFire(boolean, boolean, boolean) необходимо установить объекту leftFire значение поля y, равное y ракеты + height ракеты, если значение параметра isLeftPressed метода равно true.
5.	В методе switchFire(boolean, boolean, boolean) необходимо вызвать у объекта leftFire метод show(), если значение параметра isLeftPressed метода равное true.
6.	В методе switchFire(boolean, boolean, boolean) необходимо вызвать у объекта leftFire метод hide(), если значение параметра isLeftPressed метода равное false.
7.	В методе switchFire(boolean, boolean, boolean) необходимо установить объекту rightFire значение поля x, равное x ракеты - ShapeMatrix.FIRE_SIDE_1[0].length, если значение параметра isRightPressed метода равное true.
8.	В методе switchFire(boolean, boolean, boolean) необходимо установить объекту rightFire значение поля y, равное y ракеты + height ракеты, если значение параметра isRightPressed метода равное true.
9.	В методе switchFire(boolean, boolean, boolean) необходимо вызвать у объекта rightFire метод show(), если значение параметра isRightPressed метода равное true.
10.	В методе switchFire(boolean, boolean, boolean) необходимо вызвать у объекта rightFire метод hide(), если значение параметра isRightPressed метода равное false.
11.	В методе draw(Game) класса Rocket необходимо вызвать метод draw(Game) у объекта leftFire.
12.	В методе draw(Game) класса Rocket необходимо вызвать метод draw(Game) у объекта rightFire.
13.	В методе move(boolean, boolean, boolean) класса Rocket необходимо заменить вызов метода switchFire(boolean) с параметром isUpPressed на вызов метода switchFire(boolean, boolean, boolean) с параметрами isUpPressed, isLeftPressed и isRightPressed.


Игра Moon Lander (21/23)

На данном этапе мы отрисуем нашу первую анимацию. Нам понадобятся методы show и hide, которые будут отвечать
за отображение и скрытие реактивной тяги, а также метод switchFire который будет задавать координаты тяги и вызывать
методы show и hide в зависимости от переданного параметра. Чтобы реактивная тяга отображалась внизу по центру
ракеты, нужно установить для нее координаты x и y определенным образом:
- в поле x огня мы устанавливаем значение x (позиция левой границы) ракеты + ширина ракеты, поделенная на 2. Таким образом
x тяги окажется посредине ракеты;
- в поле y огня мы устанавливаем значение y (позиция верхней границы) ракеты + высота ракеты. Таким образом y тяги окажется
внизу ракеты;
Не забудь вызвать метод switchFire в методе move &mdash; это позволит переключать анимацию при каждом ходе игры.
Кроме того, нам нужно переопределить метод draw ракеты, чтобы иметь возможность рисовать тягу вместе с ракетой.



Игра Moon Lander (21/23)

На этом этапе мы будем дорабатывать отображение анимации реактивной тяги. Добавим и реализуем метод nextFrame(), который
будет переключать кадры для создания анимации (устанавливать текущую матрицу из frames в переменную matrix).
Также переопределим метод draw, который будет менять кадр для анимации (вызвав метод nextFrame) и вызывать метод
суперкласса для отрисовки в том случае, если isVisible == true.



Игра Moon Lander (21/23)

Продолжаем реализацию реактивной тяги. На этом этапе в класс Rocket мы добавим переменные, которые описывают
правую, левую и нижнюю тяги. Заполним эти поля в конструкторе соответствующими матрицами из класса ShapeMatrix,
которые мы подготовили заранее.



Игра Moon Lander (21/23)

Пришла пора реализовать реактивную тягу ракеты. На этом этапе создадим класс RocketFire, который будет отвечать
за отрисовку и анимирование огня выхлопа. Список матриц шагов анимаций будет храниться в его переменной frames типа List.
Переменная frameIndex будет хранить индекс текущей матрицы-анимации, а переменная isVisible будет отвечать за видимость огня.



Игра Moon Lander (21/23)

Займемся методом, отвечающим за крушение ракеты при ее пересечении с ландшафтом. Этот метод будет менять внешнее
отображение ракеты путем замены ее матрицы (матрицу ты найдешь в классе ShapeMatrix). Теперь реализуем метод gameOver.
Он должен вызвать метод crash у ракеты, показать сообщение о проигрыше и остановить игру. Кроме того, добавим перезапуск
игры при нажатии клавиши SPACE.



